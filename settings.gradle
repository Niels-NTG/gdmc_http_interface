pluginManagement {
    repositories {
        gradlePluginPortal()
        maven {
            name = 'MinecraftForge'
            url = 'https://maven.minecraftforge.net/'
        }
    }
}

plugins {
    id 'org.gradle.toolchains.foojay-resolver-convention' version '0.7.0'
}

def loadProperties() {
    def defaultMcVersion = '1.20.2'
    def mcVersion = ''
    def mcVers = fileTree('versionProperties').files.name // Get all the files in "versionProperties"
    for (int i = 0; i < mcVers.size(); i++) {
        mcVers[i] = mcVers[i].replaceAll('\\.properties', '') // As we are getting the file names, we should remove the ".properties" at the end to get the versions
    }
    mcVers.sort() // Sort so it always goes from oldest to newest

    int mcIndex = -1
    println "Available MC versions: ${mcVers}"
    if (hasProperty('mcVer')) {
        mcVersion = mcVer
        mcIndex = mcVers.indexOf(mcVer)
    }
    if (mcIndex == -1) {
        println 'No mcVer set or the set mcVer is invalid! Defaulting to ' + defaultMcVersion + '.'
        println 'Tip: Use -PmcVer="' + defaultMcVersion + '" in cmd arg to set mcVer.'
        mcVersion = defaultMcVersion
        mcIndex = mcVers.indexOf(defaultMcVersion)
        assert mcIndex != -1
    }

    println 'Loading properties file at ' + mcVersion + '.properties'
    def props = new Properties()
    props.load(new FileInputStream(String.valueOf(rootDir) + '/versionProperties/' +"$mcVersion"+ '.properties'))

    props.each { prop ->
        gradle.ext.set(prop.key, prop.value)
         println "Added prop [key:" + prop.key + ", value:" + prop.value + "]"
    }
    gradle.ext.mcVers = mcVers
    gradle.ext.mcIndex = mcIndex
}
loadProperties()
